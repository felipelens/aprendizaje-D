//  Para crear base de datos se usa
create database;
 
 // para crear tabla
 create table 'nombre'

 // para insertar datos
 insert into tabla (columnas) values (datos)

 // para crear una llave primaria
 primary key (id)

  // para mostrar todos los valores de una tabla  
 select * from 'nombre_tabla'

 // para mostrar todas las tablas se usa
 show tables

 // para modificar una columna
 alter table 'nombre_tabla' modify column id int auto_increment

 // para agregar una columna
 alter table 'nombre_tabla' add column 'nombre_columna' atrivutos

 // == * EL USO DE ID ES OBLIGATORIO * == //

// para actualizar el dato de una columna
update 'nombre_tabla' set 'columna' = 'dato a remplazar' where id = 'el valor a modificar'

// para eliminar un dato se usa
delete from 'tabla' where id = 'el valor a eliminar'

/// === REALIZAR BUSQUEDAS === ///

// para limitar los datos a un numero en especifico
select * from 'nombre_tabla' limit 'cantidad de datos'

// between es para condicionar dos valores y que se cumpla
select * from 'nombre_tabla' where edad between 15 and 30

// para saber si existe un texto o numero dentro de un dato
select * from 'nombre_tabla' where name like '%lipe%'
// el % % se usa para que no importe su orden busque un dato
// si se pone asi %lipe <- debe terminar asi 

// para poner de modo ascendente una columna
select * from 'nombre_tabla' order by 'columna' asc;

// para poner de modo descendente una columna
select * from 'nombre_tabla' order by 'columna' desc;

//para llamar el registro que contenga el valor maximo
select max('columa') from 'nombre_tabla

// para llamar el registro que contenga el valor minimo
select min('columa') from 'nombre_tabla

// para cambiar nombre de la tabla
rename table 'nombre_tabla' to 'nuevo_nombre'

// para crear llave foranea
FOREIGN KEY('la columna que se le asignara la info') REFERENCES 'la tabla donde se va traer la informacion'(id)

//left join consulta y right join es al right
select u.id,u.name,p.name from user u left join producto p on u.id(id principal de donde se trae informacion) = p.created_by(llave foranea);
    las columas que quieren que aparezcan
                        (el u es para poner un alias)
                            (unir las dos tablas de forma left)
                                                    (la condicion de que se va relacionar id = id )  
ejemplo1:
select (columnas user.nombres ) from user left join ciudades p on user.id_ciudad= ciudades.id;
ejemplo2:
select (columnas) from (tabla) inner join (tabla a relacionar) on tabla.columna(<-'llave foránea') = tabla.id 

// inner join trae la interseccion de los grupos 

// cross join es cruzar todos los datos


// group by agrupamiento individual de datos repetidos (posiblemente)
ejemplo 
select count(p.id), u.name from producto p left join user u on u.id = p.created_by group by p.created_by; 


//el having funciona solo para mostrar los valores que cumplan cierta condicion
ejemplo 
select u.name,count(p.id)  from user u left join producto p on u.id  = p.created_by
group by (u.id) 
having count(p.id) >= 2;

year()
month()
day()
year(now())
month(now())
day(now())


// para eliminar tabla
drop 'nombre_tabla';

// para crear un indice
unique index 'nombre del indice' ('nombre_tabla Asc o desc)